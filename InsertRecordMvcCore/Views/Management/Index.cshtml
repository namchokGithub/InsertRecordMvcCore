@*
    Namespace: Views/Management
    File: Index.cshtml
    Author: Namchok
*@

@model IEnumerable<InsertRecordMvcCore.Models.AccountClass>
@{
    ViewData["Title"] = "Management";
    Layout = "~/Views/AdminLTE/_Layout.cshtml";
}

@Html.AntiForgeryToken()

<h1>Management</h1>

<p>
    @Html.ActionLink("Add User", "Create", "InsertUser", new { }, new { @class = "btn btn-info" })
    @* or <a asp-controller="InsertUser" asp-action="Create">Create New</a>*@
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.acc_Id)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.acc_firstname)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.acc_user)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody id="tableUser">
        @foreach (var item in ViewData["User"] as List<AccountClass>)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.acc_Id)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.acc_firstname)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.acc_user)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", "InsertUser", new { id = item.acc_Id }, new { @class = "text-white btn btn-warning" })
                    <a class="btn btn-danger text-white" id="deleteUser" >
                        Delete
                        <input type="hidden" value="@item.acc_Id" />
                    </a>
                </td>
            </tr>
        }
    </tbody>
</table>

<script>

    $(document).ready(function () {

        function deleteUser(id) {
            $.ajax({
                url: "~/Controller/InsertController/deleteUser",
                method: "POST"
                , data: id
                , success: function (data) {
                    console.log(data)
                    swal("Good job!", "You clicked the button!", "success");
                }
            });
        }

        $(document).on("click", "#deleteUser", function (e) {

            let idUser = $(this).find("input").val();
            @*console.log(idUser)*@

            const swalWithBootstrapButtons = Swal.mixin({
                customClass: {
                    confirmButton: 'btn btn-success ml-2',
                    cancelButton: 'btn btn-danger'
                },
                buttonsStyling: false
            })

            swalWithBootstrapButtons.fire({
                title: 'Are you sure?',
                text: "Do you want to delete  account?",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonText: 'Yes',
                cancelButtonText: 'No',
                reverseButtons: true
            }).then((result) => {
                if (result.value) {

                    $.ajax({
                        url: "InsertUser/deleteUser",
                        method: "POST"
                        , data: idUser
                        , success: function (data) {
                            console.log(data)
                            swal("Good job!", "You clicked the button!", "success");
                        }, error: function (result) {
                            console.log(result)
                        }
                    });

                    swalWithBootstrapButtons.fire(
                        'Deleted!',
                        '',
                        'success'
                    )
                } else if (
                    /* Read more about handling dismissals below */
                    result.dismiss === Swal.DismissReason.cancel
                ) {
                    swalWithBootstrapButtons.fire(
                        'Cancelled',
                        '',
                        'error'
                    )
                }
            })
        });
    });

</script>